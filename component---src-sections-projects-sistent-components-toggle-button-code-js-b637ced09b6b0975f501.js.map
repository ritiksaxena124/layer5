{"version":3,"file":"component---src-sections-projects-sistent-components-toggle-button-code-js-b637ced09b6b0975f501.js","mappings":"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","sources":["webpack://Layer5/./src/components/SistentNavigation/content.js","webpack://Layer5/./src/components/SistentNavigation/pagination.style.js","webpack://Layer5/./src/components/SistentNavigation/pagination.js","webpack://Layer5/./src/sections/Projects/Sistent/components/button/code-block.js","webpack://Layer5/./src/sections/Projects/Sistent/components/toggle-button/code.js","webpack://Layer5/./src/components/SistentNavigation/intra-page.js","webpack://Layer5/./src/sections/Projects/Sistent/sistent-layout.js"],"sourcesContent":["export const content = [\n  { id: 0, link: \"/projects/sistent/about\", text: \"About Sistent\" },\n  { id: 1, link: \"/projects/sistent/identity/color\", text: \"Colors\" },\n  { id: 2, link: \"/projects/sistent/identity/color/guidance\", text: \"Colors\" },\n  { id: 3, link: \"/projects/sistent/identity/color/code\", text: \"Colors\" },\n  { id: 4, link: \"/projects/sistent/identity/spacing\", text: \"Spacing\" },\n  {\n    id: 5,\n    link: \"/projects/sistent/identity/spacing/guidance\",\n    text: \"Spacing\",\n  },\n  { id: 6, link: \"/projects/sistent/identity/spacing/code\", text: \"Spacing\" },\n  { id: 7, link: \"/projects/sistent/identity/typography\", text: \"Typography\" },\n  {\n    id: 8,\n    link: \"/projects/sistent/identity/typography/guidance\",\n    text: \"Typography\",\n  },\n  {\n    id: 9,\n    link: \"/projects/sistent/identity/typography/code\",\n    text: \"Typography\",\n  },\n  { id: 10, link: \"/projects/sistent/components/button\", text: \"Button\" },\n  {\n    id: 10,\n    link: \"/projects/sistent/components/button/guidance\",\n    text: \"Button\",\n  },\n  { id: 11, link: \"/projects/sistent/components/button/code\", text: \"Button\" },\n  {\n    id: 12,\n    link: \"/projects/sistent/components/text-input\",\n    text: \"Text Input\",\n  },\n  {\n    id: 13,\n    link: \"/projects/sistent/components/text-input/guidance\",\n    text: \"Text Input\",\n  },\n  {\n    id: 14,\n    link: \"/projects/sistent/components/text-input/code\",\n    text: \"Text Input\",\n  },\n  {\n    id: 15,\n    link: \"/projects/sistent/components/paper\",\n    text: \"Paper\",\n  },\n  {\n    id: 16,\n    link: \"/projects/sistent/components/paper/guidance\",\n    text: \"Paper\",\n  },\n  {\n    id: 17,\n    link: \"/projects/sistent/components/paper/code\",\n    text: \"Paper\",\n  },\n  {\n    id: 18,\n    link: \"/projects/sistent/components/popper\",\n    text: \"Popper\",\n  },\n  {\n    id: 19,\n    link: \"/projects/sistent/components/popper/guidance\",\n    text: \"Popper\",\n  },\n  {\n    id: 20,\n    link: \"/projects/sistent/components/popper/code\",\n    text: \"Popper\",\n  },\n  {\n    id: 21,\n    link: \"/projects/sistent/components/text-field\",\n    text: \"Text Field\",\n  },\n  {\n    id: 22,\n    link: \"/projects/sistent/components/text-field/guidance\",\n    text: \"Text Field\",\n  },\n  {\n    id: 23,\n    link: \"/projects/sistent/components/text-field/code\",\n    text: \"Text Field\",\n  },\n  {\n    id: 24,\n    link: \"/projects/sistent/components/button-group\",\n    text: \"Button Group\",\n  },\n  {\n    id: 25,\n    link: \"/projects/sistent/components/button-group/guidance\",\n    text: \"Button Group\",\n  },\n  {\n    id: 26,\n    link: \"/projects/sistent/components/button-group/code\",\n    text: \"Button Group\",\n  },\n  {\n    id: 27,\n    link: \"/projects/sistent/components/tooltip\",\n    text: \"Tooltip\",\n  },\n  {\n    id: 25,\n    link: \"/projects/sistent/components/tooltip/guidance\",\n    text: \"Tooltip\",\n  },\n  {\n    id: 26,\n    link: \"/projects/sistent/components/tooltip/code\",\n    text: \"Tooltip\",\n  },\n];\n","import styled from \"styled-components\";\n\nconst TocPaginationWrapper = styled.div`\n  display: flex;\n  gap: 1rem;\n  justify-content: center;\n  margin: 3rem 2rem 4rem 2rem;\n\n  @media screen and (max-width: 540px) {\n    margin: 0 0 2rem 0;\n    flex-flow: row wrap;\n    gap: 0.3rem;\n  }\n`;\n\nexport default TocPaginationWrapper;\n","import React, { useEffect, useState } from \"react\";\n\nimport { content } from \"./content\";\nimport Button from \"../../reusecore/Button\";\nimport PaginationWrapper from \"./pagination.style\";\n\nconst SistentPagination = () => {\n  const [currentPage, setCurrentPage] = useState(0);\n\n  useEffect(() => {\n    const path = window.location.pathname;\n    const index = content.findIndex((x) => x.link === path);\n    setCurrentPage(index);\n  }, []);\n\n  return (\n    <PaginationWrapper>\n      {currentPage > 0 ? (\n        <Button $secondary $url={content[currentPage - 1]?.link}>\n          &larr; Previous\n        </Button>\n      ) : null}\n\n      {currentPage < content.length - 1 ? (\n        <Button $primary $url={content[currentPage + 1]?.link}>\n          Next &rarr;\n        </Button>\n      ) : null}\n    </PaginationWrapper>\n  );\n};\n\nexport default SistentPagination;\n","import React, { useState } from \"react\";\nimport Code from \"../../../../../components/CodeBlock\";\n\nexport const CodeBlock = ({ name, code }) => {\n  const [showCode, setShowCode] = useState(false);\n  const onChange = () => {\n    setShowCode((prev) => !prev);\n  };\n  return (\n    <div className=\"show-code\">\n      <input type=\"checkbox\" name={name} id={name} onChange={onChange} />\n      <label htmlFor={name} className=\"label\">\n        Show Code\n      </label>\n      {showCode && (\n        <Code codeString={code} language=\"javascript\" />\n      )}\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport { navigate } from \"gatsby\";\nimport { useLocation } from \"@reach/router\";\n\nimport {\n  SistentThemeProvider,\n  ToggleButton,\n  ToggleButtonGroup,\n} from \"@layer5/sistent\";\nimport { SistentLayout } from \"../../sistent-layout\";\nimport { CodeBlock } from \"../button/code-block\";\nimport TabButton from \"../../../../../reusecore/Button\";\nimport { useStyledDarkMode } from \"../../../../../theme/app/useStyledDarkMode\";\n\nconst codes = [\n  // For exclusive selection\n  `\n    <ToggleButtonGroup\n      value=\"left\"\n      exclusive\n    >\n      <ToggleButton value=\"left\">Left</ToggleButton>\n      <ToggleButton value=\"center\">Center</ToggleButton>\n      <ToggleButton value=\"right\">Right</ToggleButton>\n    </ToggleButtonGroup>\n  `,\n  // For multiple selection\n  `\n    <ToggleButtonGroup\n      value={[\"bold\", \"italic\"]}\n    >\n      <ToggleButton value=\"bold\">Toggle Button 1</ToggleButton>\n      <ToggleButton value=\"italic\">Toggle Button 1</ToggleButton>\n      <ToggleButton value=\"underline\">Toggle Button 1</ToggleButton>\n    </ToggleButtonGroup>\n  `,\n  // For size\n  `\n    <ToggleButtonGroup value=\"option1\" exclusive size=\"small\">\n      <ToggleButton value=\"option1\">Small</ToggleButton>\n      <ToggleButton value=\"option2\">Small</ToggleButton>\n    </ToggleButtonGroup>\n    <ToggleButtonGroup value=\"option1\" exclusive size=\"medium\">\n      <ToggleButton value=\"option1\">Medium</ToggleButton>\n      <ToggleButton value=\"option2\">Medium</ToggleButton>\n    </ToggleButtonGroup>\n    <ToggleButtonGroup value=\"option1\" exclusive size=\"large\">\n      <ToggleButton value=\"option1\">Large</ToggleButton>\n      <ToggleButton value=\"option2\">Large</ToggleButton>\n    </ToggleButtonGroup>\n  `,\n  // For color\n  `\n    <ToggleButtonGroup value=\"primary\" exclusive color=\"primary\">\n      <ToggleButton value=\"primary\">Primary</ToggleButton>\n      <ToggleButton value=\"secondary\">Secondary</ToggleButton>\n    </ToggleButtonGroup>\n  `,\n  // For vertical\n  `\n    <ToggleButtonGroup\n      orientation=\"vertical\"\n      value=\"option1\"\n      exclusive\n    >\n      <ToggleButton value=\"option1\">Vertical 1</ToggleButton>\n      <ToggleButton value=\"option2\">Vertical 2</ToggleButton>\n      <ToggleButton value=\"option3\">Vertical 3</ToggleButton>\n    </ToggleButtonGroup>\n  `,\n];\n\nconst ToggleButtonCode = () => {\n  const { isDark } = useStyledDarkMode();\n  const location = useLocation();\n  const [exclusiveSelected, setExclusiveSelected] = useState(\"left\");\n  const [multiSelected, setMultiSelected] = useState([\"bold\"]);\n  const [sizeSelected, setSizeSelected] = useState(\"small\");\n  const [colorSelected, setColorSelected] = useState(\"primary\");\n  const [verticalSelected, setVerticalSelected] = useState(\"left\");\n  const handleExclusiveToggle = (event, value) => {\n    setExclusiveSelected(value);\n  };\n\n  const handleMultiToggle = (event, value) => {\n    setMultiSelected(value);\n  };\n  const handleSizeToggle = (event, value) => {\n    setSizeSelected(value);\n  };\n  const handleColorToggle = (event, value) => {\n    setColorSelected(value);\n  };\n  const handleVerticalToggle = (event, value) => {\n    setVerticalSelected(value);\n  };\n\n  return (\n    <SistentLayout title=\"ToggleButton\">\n      <div className=\"content\">\n        <a id=\"Identity\">\n          <h2>ToggleButton</h2>\n        </a>\n        <p>\n          The `ToggleButton` and `ToggleButtonGroup` are versatile components\n          that can be used for a wide range of applications. Their intuitive\n          design ensures users can make selections easily and confidently.\n          Whether it's enabling a setting, selecting a mode, or choosing\n          multiple options, these components are built to enhance user\n          experience across different scenarios.\n        </p>\n        <div className=\"filterBtns\">\n          <TabButton\n            className={\n              location.pathname === \"/projects/sistent/components/toggle-button\"\n                ? \"active\"\n                : \"\"\n            }\n            onClick={() =>\n              navigate(\"/projects/sistent/components/toggle-button\")\n            }\n            title=\"Overview\"\n          />\n          <TabButton\n            className={\n              location.pathname ===\n              \"/projects/sistent/components/toggle-button/guidance\"\n                ? \"active\"\n                : \"\"\n            }\n            onClick={() =>\n              navigate(\"/projects/sistent/components/toggle-button/guidance\")\n            }\n            title=\"Guidance\"\n          />\n          <TabButton\n            className={\n              location.pathname ===\n              \"/projects/sistent/components/toggle-button/code\"\n                ? \"active\"\n                : \"\"\n            }\n            onClick={() =>\n              navigate(\"/projects/sistent/components/toggle-button/code\")\n            }\n            title=\"Code\"\n          />\n        </div>\n        <div className=\"main-content\">\n          <a id=\"Exclusive Selection\">\n            <h3>Exclusive Selection</h3>\n          </a>\n          <div className=\"showcase\">\n            <div className=\"items\">\n              <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n                <ToggleButtonGroup\n                  value={exclusiveSelected}\n                  exclusive\n                  onChange={handleExclusiveToggle}\n                >\n                  <ToggleButton value=\"left\">Left</ToggleButton>\n                  <ToggleButton value=\"center\">Center</ToggleButton>\n                  <ToggleButton value=\"right\">Right</ToggleButton>\n                </ToggleButtonGroup>\n              </SistentThemeProvider>\n            </div>\n            <CodeBlock name=\"exclusive-selection\" code={codes[0]} />\n          </div>\n\n          <a id=\"Multiple Selection\">\n            <h3>Multiple Selection</h3>\n          </a>\n          <div className=\"showcase\">\n            <div className=\"items\">\n              <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n                <ToggleButtonGroup\n                  value={multiSelected}\n                  onChange={handleMultiToggle}\n                >\n                  <ToggleButton value=\"bold\">Toggle Button 1</ToggleButton>\n                  <ToggleButton value=\"italic\">Toggle Button 2</ToggleButton>\n                  <ToggleButton value=\"underline\">Toggle Button 3</ToggleButton>\n                </ToggleButtonGroup>\n              </SistentThemeProvider>\n            </div>\n            <CodeBlock name=\"multiple-selection\" code={codes[1]} />\n          </div>\n\n          <a id=\"Sizes\">\n            <h3>ToggleButton Sizes</h3>\n          </a>\n          <p>\n            Adjust the size of the `ToggleButton` using the `size` prop.\n            Supported values include `small`, `medium`, and `large`.\n          </p>\n          <div className=\"showcase\">\n            <div className=\"items\">\n              <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n                <div\n                  style={{\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    gap: \"1rem\",\n                    alignItems: \"center\",\n                  }}\n                >\n                  <ToggleButtonGroup\n                    value={sizeSelected}\n                    onChange={handleSizeToggle}\n                    exclusive\n                    size=\"small\"\n                    style={{ width: \"70%\" }}\n                  >\n                    <ToggleButton value=\"option1\">Small</ToggleButton>\n                    <ToggleButton value=\"option2\">Small</ToggleButton>\n                  </ToggleButtonGroup>\n\n                  <ToggleButtonGroup\n                    value={sizeSelected}\n                    onChange={handleSizeToggle}\n                    exclusive\n                    size=\"medium\"\n                  >\n                    <ToggleButton value=\"option1\">Medium</ToggleButton>\n                    <ToggleButton value=\"option2\">Medium</ToggleButton>\n                  </ToggleButtonGroup>\n\n                  <ToggleButtonGroup\n                    value={sizeSelected}\n                    onChange={handleSizeToggle}\n                    exclusive\n                    size=\"large\"\n                    style={{ width: \"120%\" }}\n                  >\n                    <ToggleButton style={ { width: \"50%\" }} value=\"option1\">Large</ToggleButton>\n                    <ToggleButton style={ { width: \"50%\" }} value=\"option2\">Large</ToggleButton>\n                  </ToggleButtonGroup>\n                </div>\n              </SistentThemeProvider>\n            </div>\n            <CodeBlock name=\"toggle-button-sizes\" code={codes[2]} />\n          </div>\n\n          <a id=\"Colors\">\n            <h3>ToggleButton Colors</h3>\n          </a>\n          <div className=\"showcase\">\n            <div className=\"items\">\n              <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n                <ToggleButtonGroup\n                  value={colorSelected}\n                  onChange={handleColorToggle}\n                  exclusive\n                  color=\"primary\"\n                >\n                  <ToggleButton value=\"primary\">Primary</ToggleButton>\n                  <ToggleButton value=\"secondary\">Secondary</ToggleButton>\n                </ToggleButtonGroup>\n              </SistentThemeProvider>\n            </div>\n            <CodeBlock name=\"toggle-button-colors\" code={codes[3]} />\n          </div>\n\n          <a id=\"Vertical Buttons\">\n            <h3>Vertical Buttons</h3>\n          </a>\n          <div className=\"showcase\">\n            <div className=\"items\">\n              <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n                <ToggleButtonGroup\n                  orientation=\"vertical\"\n                  value={verticalSelected}\n                  onChange={handleVerticalToggle}\n                  exclusive\n                >\n                  <ToggleButton value=\"option1\">Vertical 1</ToggleButton>\n                  <ToggleButton value=\"option2\">Vertical 2</ToggleButton>\n                  <ToggleButton value=\"option3\">Vertical 3</ToggleButton>\n                </ToggleButtonGroup>\n              </SistentThemeProvider>\n            </div>\n            <CodeBlock name=\"vertical-toggle-buttons\" code={codes[4]} />\n          </div>\n        </div>\n      </div>\n    </SistentLayout>\n  );\n};\n\nexport default ToggleButtonCode;\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"gatsby\";\nimport styled from \"styled-components\";\n\nconst JoinCommunityWrapper = styled.div`\n  width: 18rem;\n\n  @media screen and (max-width: 750px) {\n    display: none;\n  }\n\n  @media screen and (min-width: 751px) and (max-width: 1279px) {\n    display: none;\n  }\n  .intra-page {\n    position: sticky;\n    top: 10rem;\n    right: 0rem;\n    margin-right: 1rem;\n    padding-bottom: 5rem;\n    padding-right: 2rem;\n    align-items: left;\n    justify-content: space-around;\n    display: flex;\n    flex-direction: column;\n    overflow: hidden;\n\n    .list {\n      color: #000000;\n    }\n    .active {\n      font-weight: 5000;\n      color: #000000;\n    }\n\n    ul {\n      list-style: none;\n      top: 3rem;\n      li {\n        padding-bottom: 0.5rem;\n        padding-top: 0.5rem;\n      }\n    }\n    @media only screen and (min-width: 1280px) and (max-width: 1350px) {\n      padding-right: 0rem;\n      margin-right: 0rem;\n    }\n    @media only screen and (max-width: 950px) {\n      width: 0;\n      opacity: 0;\n      height: 0;\n      transition: none;\n      visibility: hidden;\n    }\n  }\n\n  .learn {\n    width: 10rem;\n  }\n`;\n\nfunction IntraPage() {\n  const [contents, setContents] = useState([]);\n\n  useEffect(() => {\n    const anchors = document.querySelectorAll(\".main-content > a\");\n    console.log(anchors);\n    if (anchors) {\n      setContents(\n        Array.from(anchors).map((a) => ({\n          id: a.id,\n          link: `#${a.id}`,\n          text: a.id,\n        }))\n      );\n    }\n  }, []);\n\n  const [intapath, setIntapath] = useState(null);\n  useEffect(() => {\n    const path = window.location.pathname;\n    setIntapath(path);\n  }, []);\n\n  return (\n    <JoinCommunityWrapper>\n      <div className=\"intra-page\">\n        <ul>\n          {contents.map((x) => (\n            <li key={x.id} className=\"list\">\n              <Link\n                to={`${intapath}${x.link}`}\n                key={x.id}\n                activeClassName=\"active\"\n              >\n                {x.text}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </JoinCommunityWrapper>\n  );\n}\n\nexport default IntraPage;\n","import React from \"react\";\nimport SistentWrapper from \"./sistent.style\";\nimport TOC from \"../../../components/SistentNavigation\";\nimport { Container } from \"../../../reusecore/Layout\";\nimport SistentPagination from \"../../../components/SistentNavigation/pagination\";\nimport IntraPage from \"../../../components/SistentNavigation/intra-page\";\n\nexport const SistentLayout = ({ title, children }) => {\n  return (\n    <SistentWrapper>\n      <div className=\"page-header-section\">\n        <h1>{title}</h1>\n      </div>\n      <TOC />\n      <div className=\"page-section\">\n        <Container>\n          {children} <SistentPagination />\n        </Container>\n        <IntraPage />\n      </div>\n    </SistentWrapper>\n  );\n};\n"],"names":["content","id","link","text","styled","div","withConfig","displayName","componentId","SistentPagination","_content","_content2","currentPage","setCurrentPage","useState","useEffect","path","window","location","pathname","index","findIndex","x","React","PaginationWrapper","Button","$secondary","$url","length","$primary","CodeBlock","_ref","name","code","showCode","setShowCode","className","type","onChange","prev","htmlFor","Code","codeString","language","codes","ToggleButtonCode","isDark","useStyledDarkMode","useLocation","exclusiveSelected","setExclusiveSelected","multiSelected","setMultiSelected","sizeSelected","setSizeSelected","colorSelected","setColorSelected","verticalSelected","setVerticalSelected","handleSizeToggle","event","value","SistentLayout","title","TabButton","onClick","navigate","SistentThemeProvider","initialMode","ToggleButtonGroup","exclusive","handleExclusiveToggle","ToggleButton","handleMultiToggle","style","display","flexDirection","gap","alignItems","size","width","handleColorToggle","color","orientation","handleVerticalToggle","JoinCommunityWrapper","contents","setContents","anchors","document","querySelectorAll","console","log","Array","from","map","a","intapath","setIntapath","key","Link","to","activeClassName","children","SistentWrapper","TOC","Container","IntraPage"],"sourceRoot":""}